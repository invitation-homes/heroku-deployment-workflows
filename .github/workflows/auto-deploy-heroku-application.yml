on:
  workflow_call:

jobs:
  deploy_to_heroku:
    runs-on: ubuntu-latest

    env:
      AUTO_DEPLOY_TO_DEV: ${{ secrets.AUTO_DEPLOY_TO_DEV }}
      AUTO_DEPLOY_TO_QA: ${{ secrets.AUTO_DEPLOY_TO_QA }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create a Tag for this Commit
        id: create-commit-tag
        uses: invitation-homes/heroku-deployment-workflows/.github/actions/create-commit-tag@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          include-build-metadata: true

      - name: Get Heroku Application Name for dev
        id: get-dev-heroku-application-name
        uses: invitation-homes/heroku-deployment-workflows/.github/actions/get-heroku-application-name@v1
        if: ${{ env.AUTO_DEPLOY_TO_DEV != 'false' }}
        with:
          environment: 'dev'

      - name: Deploy to Dev
        id: deploy-to-dev
        uses: akhileshns/heroku-deploy@v3.12.12
        if: ${{ env.AUTO_DEPLOY_TO_DEV != 'false' }}
        with:
          heroku_app_name: ${{ steps.get-dev-heroku-application-name.outputs.heroku-application-name }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: Create Dev Deployment
        uses: invitation-homes/heroku-deployment-workflows/.github/actions/create-deployment@v1
        if: ${{ env.AUTO_DEPLOY_TO_DEV != 'false' }}
        with:
          api-token: ${{ secrets.CI_CD_API_TOKEN }}
          environment: 'dev'
          version: ${{ steps.create-commit-tag.outputs.tag-name }}
          is-successful: ${{ steps.deploy-to-dev.outcome == 'success' }}

      - name: Get Heroku Application Name for qa
        id: get-qa-heroku-application-name
        uses: invitation-homes/heroku-deployment-workflows/.github/actions/get-heroku-application-name@v1
        if: ${{ env.AUTO_DEPLOY_TO_QA == 'true' }}
        with:
          environment: 'qa'

      - name: Deploy to QA
        id: deploy-to-qa
        uses: akhileshns/heroku-deploy@v3.12.12
        if: ${{ env.AUTO_DEPLOY_TO_QA == 'true' }}
        with:
          heroku_app_name: ${{ steps.get-qa-heroku-application-name.outputs.heroku-application-name }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: Create QA Deployment
        uses: invitation-homes/heroku-deployment-workflows/.github/actions/create-deployment@v1
        if: ${{ env.AUTO_DEPLOY_TO_QA == 'true' }}
        with:
          api-token: ${{ secrets.CI_CD_API_TOKEN }}
          environment: 'qa'
          version: ${{ steps.create-commit-tag.outputs.tag-name }}
          is-successful: ${{ steps.deploy-to-qa.outcome == 'success' }}
